{"dependencies":[{"name":"../styles/index.scss","loc":{"line":2,"column":7}}],"generated":{"js":"'use strict';\n\nrequire(\"../styles/index.scss\");\n\n$(document).ready(function () {\n  // Read config from config.json\n  var readConfigFromJSON = function () {\n    var minNum = 0,\n        maxNum = 999,\n        size = 3,\n        hasBackground = false,\n        cardBackground = false,\n        showMode = 0;\n    const data = {\n      \"range\": [\"0\", \"999\", \"3\"],\n      \"background\": false,\n      \"card\": false,\n      \"mode\": 1\n    };\n\n    minNum = data.range[0];\n    maxNum = data.range[1];\n    size = data.range[2];\n    hasBackground = data.background;\n    cardBackground = data.card;\n    showMode = data.mode;\n    return [minNum, maxNum, size, hasBackground, cardBackground, showMode];\n  };\n\n  // Add special background\n  var addBackground = function () {\n    $('body').css('background', 'url(\\'images/background.jpg\\') no-repeat center').css('background-size', '100% 100%');\n  };\n  var addCardBackground = function () {\n    for (var i = 0; i < 10; i++) {\n      $('#card' + i).css('background', 'url(\\'images/' + i + '.jpg\\') no-repeat center 200px').text('');\n    }\n  };\n\n  // Get a random number, and return as a string array\n  var getRandomNum = function (usedNum, minNum, maxNum, size) {\n    var randomNum = Math.round(Math.random() * (maxNum - minNum + 1) + minNum);\n    while (usedNum.indexOf(randomNum) !== -1) randomNum = Math.round(Math.random() * (maxNum - minNum + 1) + minNum);\n    usedNum.push(randomNum);\n    var str = randomNum.toString();\n    while (str.length < size) str = '0' + str;\n    return str.split('');\n  };\n\n  // Toggle between Cube and Ring\n  var toggleShape = function () {\n    $('#shape').toggleClass('ring').toggleClass('cube');\n  };\n\n  // Open ring and show num, or inversely\n  var toggleBetweenNumAndCube = function (ringNum, cubeNum) {\n    var $shape = $('#shape');\n    $shape.toggleClass('ringShow_' + ringNum).toggleClass('cubeShow_' + cubeNum);\n    $shape.css('-webkit-transform', 'rotateY(' + -36 * ringNum + 'deg)');\n  };\n\n  // Let card jump\n  var toggleCardJump = function (num) {\n    $('#card' + num).toggleClass('jump' + num);\n  };\n\n  // Write the number into num block\n  var displayNum = function (cardNum, showNum) {\n    $('#num' + cardNum).text(showNum);\n  };\n\n  // Let the number jump\n  var toggleNumJump = function (num) {\n    $('#num' + num).toggleClass('jumpDown');\n  };\n\n  // The whole lottery process with one num\n  var showNumByTurn = function (times, targetNum, originNum) {\n    toggleShape();\n    toggleBetweenNumAndCube(targetNum, originNum);\n    setTimeout(function () {\n      toggleCardJump(numArr[times]);\n      setTimeout(function () {\n        displayNum(times + 1, numArr[times]);\n        toggleNumJump(times + 1);\n        toggleShape();\n        toggleBetweenNumAndCube(targetNum, targetNum);\n        toggleCardJump(numArr[times]);\n      }, 1100);\n    }, 3300);\n  };\n\n  // Show all num once\n  var showNumOnce = function (numArr) {\n    for (var i = 0; i < numArr.length; i++) {\n      displayNum(i + 1, numArr[i]);\n      toggleNumJump(i + 1);\n    }\n  };\n\n  // clear numbers\n  var clearNum = function (arr) {\n    for (var i = 0; i < arr.length; i++) {\n      toggleNumJump(i + 1);\n      $('#num' + (i + 1)).text('');\n    }\n  };\n\n  // 0: minNum, 1: maxNum, 2: numLength, 3: hasBackground.\n  var config = readConfigFromJSON();\n\n  // Add background\n  if (config[3]) addBackground();\n  if (config[4]) addCardBackground();\n\n  // Lottery\n  var usedArr = [];\n  var numArr = getRandomNum(usedArr, config[0], config[1], config[2]);\n  var pressTimes = 0,\n      preNum = 0;\n  $('body').keydown(function (event) {\n    if (config[5] === 0) {\n      if (event.which === 32) {\n        if (pressTimes < numArr.length) {\n          showNumByTurn(pressTimes, numArr[pressTimes], preNum);\n          preNum = numArr[pressTimes];\n          pressTimes++;\n        } else {\n          pressTimes = 0;\n          clearNum(numArr);\n          numArr = getRandomNum(usedArr, config[0], config[1], config[2]);\n        }\n      }\n    } else if (config[5] === 1) {\n      if (event.which === 32 && pressTimes === 0) {\n        toggleShape();\n        pressTimes++;\n      } else if (event.which === 32 && pressTimes === 1) {\n        toggleShape();\n        showNumOnce(numArr);\n        pressTimes++;\n      } else if (event.which === 32 && pressTimes === 2) {\n        clearNum(numArr);\n        numArr = getRandomNum(usedArr, config[0], config[1], config[2]);\n        pressTimes = 0;\n      }\n    }\n  });\n});"},"hash":"cbdc6c11804c1891a41e0fe99449354a"}